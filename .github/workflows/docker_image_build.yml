name: Build Malware Scanner image

on:
    workflow_dispatch:
        inputs:
          environment:
            description: 'JSON array of environments to deploy (e.g., [ "defiplatformdev-v2", "defiplatformstaging-v2", "sandbox", "famedefiplatform-v2"]). Default to v2 envs with no production'
            required: true
            default: '["defiplatformdev-v2", "defiplatformstaging-v2"]'
jobs:
  build:
    strategy:
        matrix:
            project: ${{ fromJson(github.event.inputs.environment) }}

    runs-on: ubuntu-latest
    permissions:
        contents: 'read'
        id-token: 'write'
    steps:
      ## FAME
      - if: matrix.project == 'famedefiplatform-v2'
        run: |
          echo "TF_SERVICE_ACCOUNT=fame-prod-bootstrap-0@fame-prod-iac-core-0.iam.gserviceaccount.com" >> $GITHUB_ENV
          echo "WORKLOAD_IDENTITY_PROVIDER=projects/685798763336/locations/global/workloadIdentityPools/fame-bootstrap-gh/providers/fame-bootstrap-github" >> $GITHUB_ENV
          echo "IMAGE_NAME=malware-scanner" >> $GITHUB_ENV
          echo "REGION=australia-southeast1" >> $GITHUB_ENV

      - if: matrix.project == 'famedefiplatform'
        run: |
          echo "TF_SERVICE_ACCOUNT=fame-prod-bootstrap-0@fame-prod-iac-core-0.iam.gserviceaccount.com" >> $GITHUB_ENV
          echo "WORKLOAD_IDENTITY_PROVIDER=projects/685798763336/locations/global/workloadIdentityPools/fame-bootstrap-gh/providers/fame-bootstrap-github" >> $GITHUB_ENV
          echo "IMAGE_NAME=malware-scanner" >> $GITHUB_ENV
          echo "REGION=us-central1" >> $GITHUB_ENV

      - if: matrix.project == 'defiplatformstaging-v2'
        run: |
          echo "TF_SERVICE_ACCOUNT=fame-prod-bootstrap-0@fame-prod-iac-core-0.iam.gserviceaccount.com" >> $GITHUB_ENV
          echo "WORKLOAD_IDENTITY_PROVIDER=projects/685798763336/locations/global/workloadIdentityPools/fame-bootstrap-gh/providers/fame-bootstrap-github" >> $GITHUB_ENV
          echo "IMAGE_NAME=malware-scanner" >> $GITHUB_ENV
          echo "REGION=australia-southeast1" >> $GITHUB_ENV

      - if: matrix.project == 'defiplatformstaging'
        run: |
          echo "TF_SERVICE_ACCOUNT=fame-prod-bootstrap-0@fame-prod-iac-core-0.iam.gserviceaccount.com" >> $GITHUB_ENV
          echo "WORKLOAD_IDENTITY_PROVIDER=projects/685798763336/locations/global/workloadIdentityPools/fame-bootstrap-gh/providers/fame-bootstrap-github" >> $GITHUB_ENV
          echo "IMAGE_NAME=malware-scanner" >> $GITHUB_ENV
          echo "REGION=us-central1" >> $GITHUB_ENV

      - if: matrix.project == 'defiplatformsandbox'
        run: |
          echo "TF_SERVICE_ACCOUNT=fame-prod-bootstrap-0@fame-prod-iac-core-0.iam.gserviceaccount.com" >> $GITHUB_ENV
          echo "WORKLOAD_IDENTITY_PROVIDER=projects/685798763336/locations/global/workloadIdentityPools/fame-bootstrap-gh/providers/fame-bootstrap-github" >> $GITHUB_ENV
          echo "IMAGE_NAME=malware-scanner" >> $GITHUB_ENV
          echo "REGION=australia-southeast1" >> $GITHUB_ENV
          
      - if: matrix.project == 'defiplatformdev'
        run: |
          echo "TF_SERVICE_ACCOUNT=fame-prod-bootstrap-0@fame-prod-iac-core-0.iam.gserviceaccount.com" >> $GITHUB_ENV
          echo "WORKLOAD_IDENTITY_PROVIDER=projects/685798763336/locations/global/workloadIdentityPools/fame-bootstrap-gh/providers/fame-bootstrap-github" >> $GITHUB_ENV
          echo "IMAGE_NAME=malware-scanner" >> $GITHUB_ENV
          echo "REGION=us-central1" >> $GITHUB_ENV

      - if: matrix.project == 'defiplatformdev-v2'
        run: |
          echo "TF_SERVICE_ACCOUNT=fame-prod-bootstrap-0@fame-prod-iac-core-0.iam.gserviceaccount.com" >> $GITHUB_ENV
          echo "WORKLOAD_IDENTITY_PROVIDER=projects/685798763336/locations/global/workloadIdentityPools/fame-bootstrap-gh/providers/fame-bootstrap-github" >> $GITHUB_ENV
          echo "IMAGE_NAME=malware-scanner" >> $GITHUB_ENV
          echo "REGION=australia-southeast1" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: GoogleCloudPlatform/docker-clamav-malware-scanner

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
            create_credentials_file: 'true'
            workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
            service_account: ${{ env.TF_SERVICE_ACCOUNT }}
            project_id: ${{ matrix.project }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ matrix.project }}

      - name: Update config.json
        run: |
          sed "s/-bucket-name/-${{ matrix.project }}/" config.json.tmpl > config.json
          cat config.json
        working-directory: ./docker-clamav-malware-scanner/cloudrun-malware-scanner

      - name: Authenticate Docker
        run: gcloud auth configure-docker ${REGION}-docker.pkg.dev

      - name: Build and Push Docker image
        run: |
          docker build -t ${REGION}-docker.pkg.dev/${{ matrix.project }}/cloud-run-source-deploy/${IMAGE_NAME}:latest .
          docker push ${REGION}-docker.pkg.dev/${{ matrix.project }}/cloud-run-source-deploy/${IMAGE_NAME}:latest
        working-directory: ./docker-clamav-malware-scanner/cloudrun-malware-scanner

      - name: Populate ClamAV malware database
        run: |
          python3 -m venv pyenv
          . pyenv/bin/activate
          pip3 install crcmod cvdupdate
          ./updateCvdMirror.sh "cvd-mirror-${{ matrix.project }}"
          deactivate
        working-directory: ./docker-clamav-malware-scanner/cloudrun-malware-scanner
